name: Linting

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          cat ./backend/python/Pipfile.lock \
          | grep -B1 '"hashes"\|"version": ' \
          | grep -v '"markers": \|"hashes": ' \
          | grep ": {\|version" \
          | sed -e 's/: {$//g' \
          | tr '\n' ',' | tr -s ' ' ' ' \
          | sed -e 's/, "version": "//g;s/", "/ /g;s/"//g;s/,//g' \
          | tr ' ' '\n' \
          | grep -v "^$" > requirements.txt
          pip install -r requirements.txt
    - name: Analysing the code with pylint
      run: | 
        pylint --load-plugins=pylint_django --django-settings-module=api.settings --min-similarity-lines=4 --fail-under 7 $(git ls-files '*.py')
    # - name: Install modules
    #   run: |
    #     cd frontend/app/mobile
    #     npm install
    # - name: Run ESLint
    #   run: |
    #     cd frontend/app/mobile
    #     npx eslint . --ext .js,.jsx,.ts,.tsx